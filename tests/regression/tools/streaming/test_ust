#!/bin/bash
#
# SPDX-FileCopyrightText: 2012 David Goulet <dgoulet@efficios.com>
#
# SPDX-License-Identifier: LGPL-2.1-only

TEST_DESC="Streaming - User space tracing"

CURDIR=$(dirname $0)/
TESTDIR=$CURDIR/../../..
NR_ITER=5
NR_USEC_WAIT=1000000
TESTAPP_PATH="$TESTDIR/utils/testapp"
TESTAPP_NAME="gen-ust-events"
TESTAPP_BIN="$TESTAPP_PATH/$TESTAPP_NAME"
SESSION_NAME="stream"
EVENT_NAME="tp:tptest"

TRACE_PATH=$(mktemp -d -t tmp.test_streaming_ust_trace_path.XXXXXX)

NUM_TESTS=18

source $TESTDIR/utils/utils.sh

if [ ! -x "$TESTAPP_BIN" ]; then
	BAIL_OUT "No UST events binary detected."
fi

# MUST set TESTDIR before calling those functions

function test_ust_before_start ()
{
	local file_sync_before_last=$(mktemp -u -t "tmp.test_${FUNCNAME[0]}_sync_before_last.XXXXXX")
	local tracee_pids=()

	diag "Test UST streaming BEFORE tracing starts"
	create_lttng_session_uri $SESSION_NAME net://localhost
	enable_ust_lttng_event_ok $SESSION_NAME $EVENT_NAME

	# Run 5 times with a 1 second delay
	$TESTAPP_BIN -i $NR_ITER -w $NR_USEC_WAIT --sync-before-last-event ${file_sync_before_last} > /dev/null 2>&1 &
	tracee_pids+=("${!}")

	start_lttng_tracing_ok $SESSION_NAME

	touch ${file_sync_before_last}

	# Wait for the applications started in background
	wait "${tracee_pids[@]}"

	stop_lttng_tracing_ok $SESSION_NAME
	destroy_lttng_session_ok $SESSION_NAME
	rm -f ${file_sync_before_last}
}

function test_ust_after_start ()
{
	local file_sync_after_first=$(mktemp -u -t "tmp.test_${FUNCNAME[0]}_sync_after_first.XXXXXX")
	local tracee_pids=()

	diag "Test UST streaming AFTER tracing starts"
	create_lttng_session_uri $SESSION_NAME net://localhost
	enable_ust_lttng_event_ok $SESSION_NAME $EVENT_NAME
	start_lttng_tracing_ok $SESSION_NAME

	# Run 5 times with a 1 second delay
	$TESTAPP_BIN -i $NR_ITER -w $NR_USEC_WAIT \
		     --sync-after-first-event ${file_sync_after_first} >/dev/null 2>&1
	tracee_pids+=("${!}")

	while [ ! -f "${file_sync_after_first}" ]; do
		sleep 0.5
	done

	stop_lttng_tracing_ok $SESSION_NAME
	destroy_lttng_session_ok $SESSION_NAME

	# Wait for the applications started in background
	wait "${tracee_pids[@]}"
	rm -f ${file_sync_after_first}
}

plan_tests $NUM_TESTS

print_test_banner "$TEST_DESC"
bail_out_if_no_babeltrace

start_lttng_relayd -o "$TRACE_PATH"
start_lttng_sessiond

tests=( test_ust_before_start test_ust_after_start )

for fct_test in ${tests[@]};
do
	SESSION_NAME=$(randstring 16 0)
	${fct_test}

	# Validate test
	validate_trace_path_ust_uid_network "$TRACE_PATH" "$SESSION_NAME"
	validate_trace $EVENT_NAME $TRACE_PATH/$HOSTNAME/$SESSION_NAME*
	if [ $? -eq 0 ]; then
		# Only delete if successful
		rm -rf $TRACE_PATH
	else
		break
	fi
done

stop_lttng_sessiond
stop_lttng_relayd

exit $out
